# Generated by Django 2.0.7 on 2018-08-05 08:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctime', models.DateField(auto_created=True, verbose_name='创建时间')),
                ('title', models.CharField(max_length=16, verbose_name='标题')),
                ('summary', models.CharField(max_length=256, verbose_name='基本简介')),
                ('detail', models.TextField(verbose_name='具体文章')),
                ('main_stack_category', models.IntegerField(choices=[(0, 'Python'), (1, 'Golang'), (2, 'Linux运维'), (3, 'Java')], verbose_name='主站分类')),
            ],
            options={
                'verbose_name_plural': '文章表',
                'db_table': 'Article',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=8, unique=True, verbose_name='博客主题')),
                ('title', models.CharField(max_length=16, verbose_name='博客标题')),
                ('summary', models.CharField(max_length=64, verbose_name='基本简介')),
                ('surfix', models.CharField(max_length=32, verbose_name='后缀')),
            ],
            options={
                'verbose_name_plural': '博客表',
                'db_table': 'Blog',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=8, unique=True, verbose_name='类别')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Blog')),
            ],
            options={
                'verbose_name_plural': '分类表',
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctime', models.DateField(auto_created=True, verbose_name='评论时间')),
                ('content', models.CharField(max_length=128, verbose_name='评论内容')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Article', verbose_name='评论文章')),
                ('parent_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Comment', verbose_name='父评论')),
            ],
            options={
                'verbose_name_plural': '评论表',
                'db_table': 'Comment',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=8, unique=True, verbose_name='标签类别')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Blog')),
            ],
            options={
                'verbose_name_plural': '标签表',
                'db_table': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='ThumbUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_thumb_up', models.BooleanField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Article', verbose_name='文章id')),
            ],
            options={
                'verbose_name_plural': '赞踩文章关系表',
                'db_table': 'ThumbUp',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=16, unique=True, verbose_name='用户名')),
                ('pwd', models.CharField(max_length=32, verbose_name='密码')),
                ('email', models.CharField(max_length=32, unique=True, verbose_name='邮箱')),
                ('img', models.FileField(blank=True, null=True, upload_to='static', verbose_name='头像')),
                ('fans', models.ManyToManyField(blank=True, related_name='refans', to='repository.User')),
            ],
            options={
                'verbose_name_plural': '用户表',
                'db_table': 'User',
            },
        ),
        migrations.AddField(
            model_name='thumbup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.User', verbose_name='用户ID'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.User', verbose_name='评论人'),
        ),
        migrations.AddField(
            model_name='blog',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='repository.User'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.Category'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag',
            field=models.ManyToManyField(blank=True, to='repository.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='thumbup',
            unique_together={('article', 'user')},
        ),
    ]
